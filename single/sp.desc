#include <math.h>
#include "strcmp95.h"

#define TRIPLET_ON 1 
#define LIK_CUTOFF 0.95

#define LATLON SQLITE_DB_NUMFIELDS
#define ASG_FIELDS  SQLITE_DB_NUMFIELDS+1

typedef struct {
    double lat;
    double lon;
} latlon;

typedef struct {
    char* asgname;
    u_int32_t asgnum;
} asg_struct;

res_space{
%   type        levels
    jwres       JWSUB33,JWMISSING,JW66,JW100,JW100MULT,JW100MULTFULL
    distres     DIST100PLUS,DISTMISSING,DIST100,DIST75,DIST50,DIST10,DIST0
    disttype    NO_STREET,HAVE_STREET
    classres    CLASS0,CLASSMISS,CLASS25,CLASS50,CLASS75PLUS
    coauthres   C0,C1,C2,C3,C4,C5,C6,C7,C8,C9,C10
    midnameres  M0,MMISSING,M33,M67,M100
}

simprof{
%   type        name    func        extract_idx                 group
    jwres       fname   jwcmp       SQLITE_DB_INDX_FIRSTNAME    name       
    midnameres  midname midnamecmp  SQLITE_DB_INDX_FIRSTNAME    name
    jwres       lname   jwcmp       SQLITE_DB_INDX_LASTNAME     name
    distres     dist    distcmp     LATLON                      loc
    disttype    dt      disttypecmp SQLITE_DB_INDX_COUNTRY      loc
    jwres       asg     asgcmp      ASG_FIELDS                  other
    classres    cl      classcmp    SQLITE_DB_INDX_CLASS        other
    coauthres   coauths coauthcmp   SQLITE_DB_INDX_COAUTHS      coauths
}

match_sets{
%    tset01_F_2
    tset02_F_2
    tset05_F_2
}

nonmatch_sets{
    xset01_F_2
    xset03_F_2
}

training{
%   group       match_sets                           nonmatch_sets
    name        tset05_F_2                xset01_F_2
    loc         tset02_F_2,tset05_F_2                xset03_F_2
    other       tset02_F_2,tset05_F_2     xset01_F_2,xset03_F_2
    coauths     tset02_F_2                xset01_F_2,xset03_F_2
}
